% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bookmarks.R
\name{bookmarks}
\alias{bookmarks}
\alias{get_bookmarks}
\alias{get_bookmarks_pdftk}
\alias{set_bookmarks}
\alias{set_bookmarks_pdftk}
\alias{set_bookmarks_gs}
\title{Set/get pdf bookmarks}
\usage{
get_bookmarks(filename)

get_bookmarks_pdftk(filename)

set_bookmarks(bookmarks, input, output = input)

set_bookmarks_pdftk(bookmarks, input, output = input)

set_bookmarks_gs(bookmarks, input, output = input)
}
\arguments{
\item{filename}{Filename (pdf) to extract bookmarks from.}

\item{bookmarks}{A data frame with bookmark information with the following columns:\describe{
\item{title}{Title for bookmark (mandatory, character)}
\item{page}{Page number for bookmark (mandatory, integer)}
\item{level}{Level of bookmark e.g. 1 top level, 2 second level, etc. (optional, integer).
If missing will be inferred from \code{count} column else will be assumed to be \code{1L}.}
\item{count}{Number of bookmarks immediately subordinate (optional, integer).
Positive count indicates bookmark should start open while
negative count indicates that this bookmark should start closed.
If missing will be inferred from \code{level} column else will be assumed to be \code{0L}.
Note some pdf viewers quietly ignore the initially open/closed feature.}
\item{style}{Style of the bookmark (optional, integer).
If \code{NA_integer_} will be unset (defaults to "plain").
0 is Plain, 1 is Italic, 2 is Bold, and 3 is Bold and italic.
Note many pdf viewers quietly ignore this feature.}
\item{color}{Color of the bookmark (optional, character).
If \code{NA_character_} will be unset (presumably defaults to "black").
Note many pdf viewers quietly ignore this feature.}
}}

\item{input}{Input pdf filename.}

\item{output}{Output pdf filename.}
}
\value{
\code{get_bookmarks()} returns a data frame with bookmark info (see \code{bookmarks} parameter for details about columns).
An \code{NA} indicates that the backend doesn't report information about this pdf feature.
\code{set_bookmarks()} returns the (output) filename invisibly.
}
\description{
\code{get_bookmarks()} gets pdf bookmarks from a file.
\code{set_bookmarks()} sets pdf bookmarks for a file.
}
\details{
\code{get_bookmarks()} will try to use the following helper functions in the following order:
\enumerate{
\item \code{get_bookmarks_pdftk()} which wraps \code{pdftk} command-line tool
}

\code{set_bookmarks()} will try to use the following helper functions in the following order:
\enumerate{
\item \code{set_bookmarks_gs()} which wraps \code{ghostscript} command-line tool
\item \code{set_bookmarks_pdftk()} which wraps \code{pdftk} command-line tool
}
}
\section{Known limitations}{

\itemize{
\item \code{set_bookmarks_gs()} only supports setting the title, page number, level of bookmarks, and whether open/closed.
\item \code{set_bookmarks_gs()} also probably doesn't work with Unicode input.
\item \code{set_bookmarks_pdftk()} only supports setting the title, page number, and level of bookmarks.
}
}

\examples{
# Create 2-page pdf using `pdf)` and add some bookmarks to it
if (supports_set_bookmarks() && supports_get_bookmarks() && require("grid", quietly = TRUE)) {
  f <- tempfile(fileext = ".pdf")
  pdf(f, onefile = TRUE)
  grid.text("Page 1")
  grid.newpage()
  grid.text("Page 2")
  invisible(dev.off())

  print(get_bookmarks(f))
  \dontshow{cat("\n")}

  bookmarks <- data.frame(title = c("Page 1", "Page 2"), page = c(1, 2))

  set_bookmarks(bookmarks, f)
  print(get_bookmarks(f))
  unlink(f)
}
}
\seealso{
\code{\link[=supports_get_bookmarks]{supports_get_bookmarks()}}, \code{\link[=supports_set_bookmarks]{supports_set_bookmarks()}}, \code{\link[=supports_gs]{supports_gs()}}, and \code{\link[=supports_pdftk]{supports_pdftk()}} to detect support for these features.  For more info about the pdf bookmarks feature see \url{https://opensource.adobe.com/dc-acrobat-sdk-docs/library/pdfmark/pdfmark_Basic.html#bookmarks-out}.
}
