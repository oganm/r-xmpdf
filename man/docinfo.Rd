% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/docinfo.R
\name{docinfo}
\alias{docinfo}
\alias{get_docinfo}
\alias{get_docinfo_pdftools}
\alias{get_docinfo_pdftk}
\alias{set_docinfo}
\alias{set_docinfo_gs}
\alias{set_docinfo_pdftk}
\title{Document info dictionary}
\usage{
docinfo(
  author = NULL,
  creation_date = NULL,
  creator = NULL,
  producer = NULL,
  title = NULL,
  subject = NULL,
  keywords = NULL,
  mod_date = NULL,
  filename = NULL
)

get_docinfo(filename)

get_docinfo_pdftools(filename)

get_docinfo_pdftk(filename)

set_docinfo(docinfo, input, output = input)

set_docinfo_gs(docinfo, input, output = input)

set_docinfo_pdftk(docinfo, input, output = input)
}
\arguments{
\item{author}{The document's author.}

\item{creation_date}{The date the document was created. Will be coerced by \code{as.Date()}.}

\item{creator}{The name of the application that originally created the document (if converted to pdf).}

\item{producer}{The name of the application that converted the document to pdf.}

\item{title}{The document's title.}

\item{subject}{The document's subject.}

\item{keywords}{Character vector of keywords for this document (for cross-document searching).}

\item{mod_date}{The date the document was last modified. Will be coerced by \code{as.Date()}.
If left \code{NULL} will default to \code{Sys.Date()} when used to set documentation info entry.}

\item{filename}{Filename (pdf) to extract info dictionary entries from.
Any such entries will be overridden by any manually set entries in \code{\link[=docinfo]{docinfo()}}.}
}
\value{
\code{docinfo()} and \code{get_docinfo()} returns a "docinfo" R6 class.
}
\description{
\code{docinfo()} creates an object of pdf document info dictionary information from scratch.
\code{get_docinfo()} gets pdf document info from a file.
\code{set_docinfo()} sets pdf document info for a file.
}
\details{
Currently does not support arbitrary info dictionary entries.
Currently only supports date year, month, and day for \code{CreationDate} and \code{ModDate} entries
(does not support hours, minutes, seconds and relation to GMT).

\code{get_docinfo()} will try to use the following helper functions in the following order:
\enumerate{
\item \code{get_docinfo_pdftools()} which wraps \code{\link[pdftools:pdftools]{pdftools::pdf_info()}}
\item \code{get_docinfo_pdftk()} which wraps \code{pdftk} command-line tool
}

\code{set_docinfo()} will try to use the following helper functions in the following order:
\enumerate{
\item \code{set_docinfo_gs()} which wraps \code{ghostscript} command-line tool
\item \code{set_docinfo_pdftk()} which wraps \code{pdftk} command-line tool
}
}
\section{\code{docinfo} R6 Class Methods}{
\describe{
\item{\code{pdfmark()}}{Return a string of pdfmark info for use with \code{ghostscript}.}
\item{\code{pdftk()}}{Return a string of pdfmark metadata for use with \code{pdftk}.}
\item{\code{set_item(key, value)}}{Set documentation info key \code{key} with value \code{value}.
}
}

\examples{
if (piecepackr.metadata:::supports_set_docinfo() &&
    piecepackr.metadata:::supports_get_docinfo() &&
    require("grid", quietly = TRUE)) {
  f <- tempfile(fileext = ".pdf")
  pdf(f, onefile = TRUE)
  grid.text("Page 1")
  grid.newpage()
  grid.text("Page 2")
  invisible(dev.off())

  di_get <- get_docinfo(f)
  print(di_get$title)
  print(di_get$author)

  di_set <- docinfo(author = "John Doe", title = "Two Boring Pages")
  set_docinfo(di, f)

  di_get <- get_docinfo(f)
  print(di_get$title)
  print(di_get$author)
  unlink(f)
}
}
\seealso{
\url{https://opensource.adobe.com/dc-acrobat-sdk-docs/library/pdfmark/pdfmark_Basic.html#document-info-dictionary-docinfo}
}
