% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/docinfo.R
\name{docinfo}
\alias{docinfo}
\alias{get_docinfo}
\alias{get_docinfo_pdftools}
\alias{get_docinfo_pdftk}
\alias{set_docinfo}
\alias{set_docinfo_gs}
\alias{set_docinfo_pdftk}
\title{Set/get pdf document info dictionary}
\usage{
docinfo(
  author = NULL,
  creation_date = NULL,
  creator = NULL,
  producer = NULL,
  title = NULL,
  subject = NULL,
  keywords = NULL,
  mod_date = NULL,
  filename = NULL
)

get_docinfo(filename)

get_docinfo_pdftools(filename)

get_docinfo_pdftk(filename)

set_docinfo(docinfo, input, output = input)

set_docinfo_gs(docinfo, input, output = input)

set_docinfo_pdftk(docinfo, input, output = input)
}
\arguments{
\item{author}{The document's author.}

\item{creation_date}{The date the document was created. Will be coerced by \code{as.Date()}.}

\item{creator}{The name of the application that originally created the document (if converted to pdf).}

\item{producer}{The name of the application that converted the document to pdf.}

\item{title}{The document's title.}

\item{subject}{The document's subject.}

\item{keywords}{Character vector of keywords for this document (for cross-document searching).}

\item{mod_date}{The date the document was last modified. Will be coerced by \code{as.Date()}.
If left \code{NULL} will default to \code{Sys.Date()} when used to set documentation info entry.}

\item{filename}{Filename (pdf) to extract info dictionary entries from.
Any such entries will be overridden by any manually set entries in \code{\link[=docinfo]{docinfo()}}.}

\item{docinfo}{A "docinfo" object (as returned by \code{\link[=docinfo]{docinfo()}} or \code{\link[=get_docinfo]{get_docinfo()}}).}

\item{input}{Input pdf filename.}

\item{output}{Output pdf filename.}
}
\value{
\code{docinfo()} and \code{get_docinfo()} returns a "docinfo" R6 class.
\code{set_docinfo()} returns the (output) filename invisibly.
}
\description{
\code{docinfo()} creates an object of pdf document info dictionary information from scratch.
\code{get_docinfo()} gets pdf document info from a file.
\code{set_docinfo()} sets pdf document info for a file.
}
\details{
\code{get_docinfo()} will try to use the following helper functions in the following order:
\enumerate{
\item \code{get_docinfo_pdftools()} which wraps \code{\link[pdftools:pdftools]{pdftools::pdf_info()}}
\item \code{get_docinfo_pdftk()} which wraps \code{pdftk} command-line tool
}

\code{set_docinfo()} will try to use the following helper functions in the following order:
\enumerate{
\item \code{set_docinfo_gs()} which wraps \code{ghostscript} command-line tool
\item \code{set_docinfo_pdftk()} which wraps \code{pdftk} command-line tool
}
}
\section{\code{docinfo} R6 Class Methods}{
\describe{
\item{\code{pdfmark()}}{Return a string of pdfmark info for use with \code{ghostscript}.}
\item{\code{pdftk()}}{Return a string of pdfmark metadata for use with \code{pdftk}.}
\item{\code{set_item(key, value)}}{Set documentation info key \code{key} with value \code{value}.
Can also use the relevant active bindings to set documentation info keys.}
}
}

\section{\code{docinfo} R6 Active Bindings}{
\describe{
\item{\code{author}}{The document's author.}
\item{\code{creation_date}}{The date the document was created.}
\item{\code{creator}}{The name of the application that originally created the document (if converted to pdf).}
\item{\code{producer}}{The name of the application that converted the document to pdf.}
\item{\code{title}}{The document's title.}
\item{\code{subject}}{The document's subject.}
\item{\code{keywords}}{Character vector of keywords for this document (for cross-document searching).}
\item{\code{mod_date}}{The date the document was last modified.}
}
}

\section{Known limitations}{

\itemize{
\item Currently does not support arbitrary info dictionary entries.
\item Currently only supports date year, month, and day for \code{CreationDate} and \code{ModDate} entries
(does not support hours, minutes, seconds and relation to GMT).
\item \code{set_docinfo_pdftk()} won't update any previously set XPN metadata.
Some pdf viewers will preferentially use the previously set document title from XPN metadata
if it exists instead of using the documentation info dictionary entry.
}
}

\examples{
if (supports_set_docinfo() && supports_get_docinfo() && require("grid", quietly = TRUE)) {
  f <- tempfile(fileext = ".pdf")
  pdf(f, onefile = TRUE)
  grid.text("Page 1")
  grid.newpage()
  grid.text("Page 2")
  invisible(dev.off())

  di_get1 <- get_docinfo(f)
  print(di_get1)
  \dontshow{cat("\n\n")}

  di_set <- docinfo(author = "John Doe",
                    title = "Two Boring Pages",
                    keywords = c("R", "xmpdf"),
                    filename = f)
  set_docinfo(di_set, f)

  di_get2 <- get_docinfo(f)
  print(di_get2)
  unlink(f)
}
}
\seealso{
\code{\link[=supports_get_docinfo]{supports_get_docinfo()}}, \code{\link[=supports_set_docinfo]{supports_set_docinfo()}}, \code{\link[=supports_gs]{supports_gs()}}, and \code{\link[=supports_pdftk]{supports_pdftk()}} to detect support for these features. For more info about the pdf document info dictionary see
\url{https://opensource.adobe.com/dc-acrobat-sdk-docs/library/pdfmark/pdfmark_Basic.html#document-info-dictionary-docinfo}.
}
